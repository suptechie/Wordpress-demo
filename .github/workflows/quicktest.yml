name: Quick Tests

on:
  push:
    branches-ignore:
      - main
    paths-ignore:
      - '**.md'
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Performs some quick tests.
  # This is a much quicker test suite which only runs the unit tests and linting
  # against the low/high supported PHP/PHPCS combinations.
  quick-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '5.4', '7.4', 'latest' ]
        phpcs_version: [ 'lowest', 'dev-master' ]

    name: QTest - PHP ${{ matrix.php }} on PHPCS ${{ matrix.phpcs_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # On stable PHPCS versions, allow for PHP deprecation notices.
      # Unit tests don't need to fail on those for stable releases where those issues won't get fixed anymore.
      - name: Setup ini config
        id: set_ini
        run: |
          if [ "${{ matrix.phpcs_version }}" != "dev-master" ]; then
            echo 'PHP_INI=error_reporting=E_ALL & ~E_DEPRECATED, display_errors=On' >> $GITHUB_OUTPUT
          else
            echo 'PHP_INI=error_reporting=-1, display_errors=On' >> $GITHUB_OUTPUT
          fi

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: ${{ steps.set_ini.outputs.PHP_INI }}
          coverage:  ${{ github.ref_name == 'develop' && 'xdebug' || 'none' }}

      - name: "Set PHPCS version (master)"
        if: ${{ matrix.phpcs_version != 'lowest' }}
        run: composer require squizlabs/php_codesniffer:"${{ matrix.phpcs_version }}" --no-update --no-scripts --no-interaction

      - name: Install Composer dependencies (PHP < 8.0 )
        if: ${{ matrix.php < 8.0 && matrix.php != 'latest' }}
        uses: ramsey/composer-install@v2
        with:
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: Install Composer dependencies (PHP >= 8.0)
        if: ${{ matrix.php >= 8.0 || matrix.php == 'latest' }}
        uses: ramsey/composer-install@v2
        with:
          composer-options: --ignore-platform-req=php+
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: "Set PHPCS version (lowest)"
        if: ${{ matrix.phpcs_version == 'lowest' }}
        run: composer update squizlabs/php_codesniffer --prefer-lowest --ignore-platform-req=php+ --no-scripts --no-interaction

      - name: Lint PHP files against parse errors
        if: ${{ matrix.phpcs_version == 'dev-master' }}
        run: composer lint -- --checkstyle

      - name: Run the unit tests without code coverage - PHP 5.4 - 8.0
        if: ${{ matrix.php == '5.4' && github.ref_name != 'develop' }}
        run: composer run-tests

      # Until PHPCS supports PHPUnit 9, we cannot run code coverage on PHP 8.0+, so run it on PHP 5.4 and 7.4.
      - name: Run the unit tests with code coverage - PHP 5.4 - 8.0
        if: ${{ matrix.php != 'latest' && github.ref_name == 'develop' }}
        run: composer coverage

      - name: Run the unit tests without code coverage - PHP >= 8.1
        if: ${{ matrix.php == 'latest' }}
        run: composer run-tests -- --no-configuration --bootstrap=./Tests/bootstrap.php --dont-report-useless-tests

      - name: Send coverage report to Codecov
        if: ${{ success() && github.ref_name == 'develop' && matrix.php != 'latest' }}
        uses: codecov/codecov-action@v3
        with:
          files: ./build/logs/clover.xml
          fail_ci_if_error: true
          verbose: true
